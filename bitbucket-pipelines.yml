image: atlassian/default-image:3

definitions:
  services:
    docker:
      memory: 3072
pipelines:
  # default:
  #   - parallel:
  #       - step:
  #           name: Build and Test
  #           script:
  #             - IMAGE_NAME=$BITBUCKET_REPO_SLUG-app
  #             # - cat .env.envsubst | envsubst >> .env
  #             - docker build . --file Dockerfile --tag ${IMAGE_NAME}
  #           services:
  #             - docker
  #           caches:
  #             - docker
  #       - step:
  #           name: Lint the Dockerfile
  #           image: hadolint/hadolint:latest-debian
  #           script:
  #             - hadolint Dockerfile
  # branches:
    # main:
    #   - step:
    #       name: Build and Test
    #       script:
    #         - IMAGE_NAME=$BITBUCKET_REPO_SLUG-app
    #         - cat .env.envsubst | envsubst >> .env
    #         - docker build . --file Dockerfile --tag ${IMAGE_NAME}
    #         - docker save ${IMAGE_NAME} --output "${IMAGE_NAME}.tar"
    #       services:
    #         - docker
    #       caches:
    #         - docker
    #       artifacts:
    #         - "*.tar"
    #   - step:
    #       name: Deploy to Production
    #       deployment: Production
    #       script:
    #         - echo ${DOCKERHUB_PASSWORD} | docker login --username "$DOCKERHUB_USERNAME" --password-stdin
    #         - IMAGE_NAME=$BITBUCKET_REPO_SLUG-app
    #         - DOCKERHUB_NAMESPACE=$DOCKERHUB_USERNAME
    #         - docker load --input "${IMAGE_NAME}.tar"
    #         - VERSION="prod-0.1.${BITBUCKET_BUILD_NUMBER}"
    #         - IMAGE=${DOCKERHUB_NAMESPACE}/${IMAGE_NAME}
    #         - docker tag "${IMAGE_NAME}" "${IMAGE}:${VERSION}"
    #         - docker tag "${IMAGE_NAME}" "${IMAGE}:latest"
    #         - docker push "${IMAGE}:${VERSION}"
    #         - docker push "${IMAGE}:latest"
    #       services:
    #         - docker
  custom:
    pipeline-build-image:
      - step:
          name: Build and Test
          script:
            - IMAGE_NAME=$BITBUCKET_REPO_SLUG-app
            - cat .env.envsubst | envsubst >> .env
            - docker build . --file Dockerfile --tag ${IMAGE_NAME}
            - docker save ${IMAGE_NAME} --output "${IMAGE_NAME}.tar"
          services:
            - docker
          caches:
            - docker
          artifacts:
            - "*.tar"
      - step:
          name: Deploy to Test
          deployment: Test
          script:
            - echo ${DOCKERHUB_PASSWORD} | docker login --username "$DOCKERHUB_USERNAME" --password-stdin
            - IMAGE_NAME=$BITBUCKET_REPO_SLUG-app
            - DOCKERHUB_NAMESPACE=$DOCKERHUB_USERNAME
            - docker load --input "${IMAGE_NAME}.tar"
            - VERSION="prod-0.1.${BITBUCKET_BUILD_NUMBER}"
            - IMAGE=${DOCKERHUB_NAMESPACE}/${IMAGE_NAME}
            - docker tag "${IMAGE_NAME}" "${IMAGE}:${VERSION}"
            - docker tag "${IMAGE_NAME}" "${IMAGE}:latest"
            - docker push "${IMAGE}:${VERSION}"
            - docker push "${IMAGE}:latest"
          services:
            - docker
